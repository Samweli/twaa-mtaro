$(function () {


    var center = new L.LatLng(-6.817523270254579, 39.25610303878784);
    var mapOptions = {
        center: center,
        zoom: 13,
        doubleClickZoom: true
    }

    //kml layer with drains
    var kmlLayer;
    var popup;
    var drainLocation;
    var activeObjectId;
    var user_id;
    var users;
    var pos;
    var drain_pos;
    var selected_drain;
    var bDebug = true;

  /* Creating map*/

  var map = new L.Map('map_canvas', mapOptions);
  var osmAttr = 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>';
  var osm = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{
    attribution:osmAttr
  });
  
  // var hananasif = L.tileLayer( 
  //   'https://api.mapbox.com/styles/v1/samtwesa/cj670gav2029o2rmrrg886sj7/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic2FtdHdlc2EiLCJhIjoiZTc1OTQ4ODE0ZmY2MzY0MGYwMDNjOWNlYTYxMjU4NDYifQ.F1zCcOYqpXWd4C9l9xqvEQ',
  // {     
  //       minZoom: 13,
  //       maxZoom: 18,
  //       attribution:osmAttr
  //  });

  map.addLayer(osm);

  // map.addLayer(hananasif);

  var urlParam = function(name) {
      var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
      if (results == null) {
          return 'en';
      }
      else {
          return results[1] || 0;
      }
  }

    var refreshKML = function (type) {

      /* Styling mitaro */
        var customLayer = L.geoJson(null, {
            style: function (feature) {
                switch (feature.properties.styleUrl) {
                    case '#unclear':
                        return {color: "#dd9031", opacity: 1, weight: 2.5};
                    // case '#adopted':
                    //     return {color: "gray", opacity: 1, weight: 2.5};
                    case '#needs_help':
                        return {color: "#6495ed", opacity: 1, weight: 2.5};
                    case '#cleared':
                        return {color: "green", opacity: 1, weight: 2.5};
                    case '#unknown':
                        return {color: "#CB7D50", opacity: 1, weight: 2.5}
                }
            }
        });
        if (kmlLayer) {
            map.removeLayer(kmlLayer);
        }

      /* dyamically loading mitaro using the center coordinates */
        var c = map.getCenter();
        console.info("Rendering drains of [%s, %s]", c.lat, c.lng)
        var locale = urlParam('locale');

        var url;
        if (type) {
            url = 'drains.kml?locale=' + locale + '&type=' + type;
        } else {
            url = 'drains.kml?locale=' + locale + '&lat=' + c.lat + '&lng=' + c.lng + '&r=' + (new Date()).valueOf();
        }
        showSpinner();

      /* Loading KML*/
        kmlLayer = omnivore.kml(url, null, customLayer)
            .on('ready', function () {
                hideSpinner();
            })
            .on('error', function (jqXHR) {
                hideSpinner();
                data = $.parseJSON(jqXHR.error.responseText);

                msg = '<h2>' + data.errors.address + '</h2>';
                createPopup(msg, map.getCenter());

            }).addTo(map);

      /* Listens to clicks on drains*/
        kmlLayer.on('click', function (e) {
            var mtaro = e.layer.feature.properties;
            // increase size of the clicked drain
            selected = e.layer
            selected.bringToFront()
            // check for past selected drain and 
            // return its style as always
            if (selected_drain){
                selected_drain.setStyle({weight: 2.5});
            }
            // Style selected
            selected.setStyle({weight: 6});
            selected_drain = selected;
            
            activeObjectId = mtaro.description;
            drainLocation = e.latlng;
            // Fetching drain info
            fetchDrainInfo(mtaro.description, drainLocation);
        });

      /*add KML layer to map*/
        map.addLayer(kmlLayer);

    }

    // Adding Legend
    function addLegend() {
        var legend = L.control({position: 'topright'});

        legend.onAdd = function (map) {

            var locale = urlParam('locale');
            var colour_map;
            var div;

            if (locale == 'sw') {
                colour_map = {'Misafi': "green", 'Michafu': "#dd9031", 'Msaada': '#6495ed',
                              'Haijulikani': "#CB7D50" }

                div = L.DomUtil.create('div', 'info legend'),
                    colours = ['Misafi', 'Michafu', 'Msaada', 'Haijulikani'],
                    labels = [];
                // Adding legend header
                div.innerHTML += '<h3 > Alama </h3>';

            } else {
                colour_map = {'Clean': "green", 'Not clean': "#dd9031", 'Needs help': '#6495ed',
                              'Unknown': "#CB7D50"}

                div = L.DomUtil.create('div', 'info legend'),
                    colours = ['Clean', 'Not clean', 'Needs help', 'Unknown'],

                    labels = [];
                // Adding legend header
                div.innerHTML += '<h3> Legend </h3>';
            }


            // loop through our density intervals and generate a label with a colored square for each interval
            for (var i = 0; i < colours.length; i++) {
                div.innerHTML +=
                    '<i style="background:' + colour_map[colours[i]] + '"></i> ' +
                    colours[i] + '<br><br>';
            }

            return div;
        };

        legend.addTo(map);

    }

    refreshKML("all");
    addLegend();


  /* popup Window for displaying details of Mtaro */
    function createPopup(msg, pos) {
        if (pos == null) {
            pos = map.getCenter();

        }
        popup = L.popup({maxWidth: 960})
            .setLatLng(pos)
            .setContent(msg)
            .openOn(map);
        bind(pos);
    }

    function fetchDrainInfo(gid, pos) {

        if (gid == undefined) {
            // do nothing
            map.closePopup();
            return false;
        }
        //if (bDebug) console.info(e.latLng);
        var locale = urlParam('locale');
        var dataToReturn;

        $.ajax({
            type: 'GET',
            url: '/drain_claims/' + gid,
            data: {
                //'id': activeObjectId
                'locale': locale
            },
            error: function (jqXHR) {
            },
            success: function (data) {
                // Updating variable for info window position
                drain_pos = pos;

                createPopup(data, pos);
                hideSpinner();
            }

        });

    }

    function showSpinner() {
        $('#spinner').show();
    }

    function hideSpinner() {
        $('#spinner').hide();

    }

    function showInfoWindow() {
        $('#info_window').show();
    }

    function unmarkError(i) {
        $(i).removeClass('error');
    }

    function markError(i, e) {
        e.push(i);
        $(i).addClass('error');
    }


  /* executes javascript for recaptcha */
    function ajaxJS(data) {

        $(data).find('script').each(function () {
            $.ajax({
                url: this.src,
                dataType: "script",
                success: function () {
                }
            });
        });
    }

  /* displays sign_in form inside a popup */
    $('body').on('click', '#sign_in_link', function () {

        var locale = urlParam('locale');

        $.ajax({
            type: 'GET',
            url: '/users/sign_in',
            data: {
                'locale': locale
            },
            success: function (msg) {

                createPopup(msg, map.getCenter());
            }

        });
        return false;
    });


  /* displays user profile inside a popup */
    $('body').on('click', '#my_profile', function () {

        var locale = urlParam('locale');

        $.ajax({
            type: 'GET',
            url: '/profile',
            data: {
                'locale': locale
            },
            success: function (msg) {

                createPopup(msg, map.getCenter());
            }

        });
        return false;
    });


  /* displays edit profile form inside a popup */
    $('body').on('click', '#edit_profile_form', function () {

        var locale = urlParam('locale');

        $.ajax({
            type: 'GET',
            url: '/users/edit',
            data: {
                'locale': locale
            },
            success: function (msg) {

                createPopup(msg, map.getCenter());
            }

        });
        return false;
    });


    function newClaim() {
        var locale = urlParam('locale');

        $.ajax({
            type: 'GET',
            url: 'drain_claims/new',
            data: {
                'locale': locale
            },
            success: function (msg) {
                createPopup(msg, map.getCenter());
                ajaxJS(msg);
            }
        });
        return false;
    }

  /* displays sign_up form inside a popup */
    $('body').on('click', '#sign_up_link', function () {
        var locale = urlParam('locale');

        $.ajax({
            type: 'GET',
            url: '/users/sign_up',
            data: {
                'locale': locale
            },
            success: function (msg) {
                createPopup(msg, map.getCenter());
                ajaxJS(msg);
            }
        });
        return false;
    });


  /* for adding users in assigning drains */
    $('body').on('click', '#add_user', function () {
        var locale = urlParam('locale');

        $.ajax({
            type: 'GET',
            url: '/add',
            data: {
                'locale': locale
            },
            success: function (msg) {
                createPopup(msg, map.getCenter());
                ajaxJS(msg);
            }
        });
        return false;
    });


    /* stardardizes the phonenumber */
    function standardizePhoneNumber(num){
        var country_code ="255";
        if(num.startsWith("0")){
          var  standard_number = country_code.concat(num.slice(1))
            return standard_number;
        }
        else {
            return num;
        }
    }


  /* signs in registered users */
    $('body').on('submit', 'form.sign_in_form', function (e) {
        i = $(e.target);
        var submitButton = $("input[type='submit']", i);
        var usms_number = $('.user_sms_number', i);
        var upwd = $('.user_password', i);
        var err_msg = $('.error_msg', i);
        var errors = [];

        var locale = urlParam('locale');


        e.preventDefault();
        submitButton.attr('disabled', 'disabled');
/*        if (!/[\w\.%\+\]+@[\w\]+\.+[\w]{2,}/.test(uemail.val())) {
            markError(uemail, errors);
        } else {
            unmarkError(uemail);
        }*/
        if (upwd.val().length < 6 || upwd.val().length > 20) {
            markError(upwd, errors);
        } else {
            unmarkError(upwd);
        }
        if (errors.length > 0) {
            submitButton.removeAttr('disabled');
            errors[0].focus();
        }
        else {
            $.ajax({
                type: 'POST',
                url: '/users/sign_in.json',
                data: {
                    'commit': submitButton.val(),
                    'utf8': '✓',
                    'authenticity_token': $('input[name="authenticity_token"]', i).val(),
                    'user': {
                        'sms_number':standardizePhoneNumber(usms_number.val()) ,
                        'password': upwd.val(),
                        'remember_me': $('.user_remember_me', i).val()
                    },
                    'locale': locale
                },
                beforeSend: function () {
                },
                error: function (jqXHR) {
                    data = $.parseJSON(jqXHR.responseText);
                    submitButton.removeAttr('disabled');
                    err_msg.html('<h2>' + data.errors.password + '</h2>');
                    popup.setContent($('#IWCONTENT')[0]);
                    uemail.focus();

                },
                success: function (data) {
                    $('.sign_links').remove();
                    updateSidebar();
                    fetchDrainInfo();
                    window.location.href = window.location.hostname;
                    console.log(window.location.href);
                    window.location.reload();

                }
            });
        }

        return false;
    });


  /* signs up new users */
    $('body').on('submit', '#sign_up_form', function () {
        var submitButton = $("input[type='submit']", this);
        var uemail = $('#user_email');
        var ufname = $('#user_first_name');
        var ulname = $('#user_last_name');
        var uPhone = $('#user_sms_number');
        var uStreet = $('#user_street_id');
        var upwd = $('#user_password');
        var upwdc = $('#user_password_confirmation');
        var errors = [];

        var locale = urlParam('locale');


        submitButton.attr('disabled', 'disabled');
        if (ufname.val() === '') {
            markError(ufname, errors);
        } else {
            unmarkError(ufname);
        }
        if (ulname.val() === '') {
            markError(ulname, errors);
        } else {
            unmarkError(ulname);
        }
        if (!/[\w\.%\+\]+@[\w\]+\.+[\w]{2,}/.test(uemail.val())) {
            markError(uemail, errors);
        } else {
            unmarkError(uemail);
        }
        if (!/^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/im.test(uPhone.val())) {
            markError(uPhone, errors);
        } else {
            unmarkError(uPhone);
        }
        if (upwd.val().length < 6 || upwd.val().length > 20) {
            markError(upwd, errors);
        } else {
            unmarkError(upwd);
        }
        if (upwdc.val().length < 6 || upwdc.val().length > 20) {
            markError(upwdc, errors);
        } else {
            unmarkError(upwdc);
        }
        if (errors.length > 0) {
            submitButton.removeAttr('disabled');
            errors[0].focus();
        }
        else {
            $.ajax({
                type: 'POST',
                url: '/users.json',
                data: {
                    'commit': submitButton.val(),
                    'utf8': '✓',
                    'authenticity_token': $('input[name="authenticity_token"]', this).val(),
                    'recaptcha_challenge_field': $('#recaptcha_challenge_field').val(),
                    'recaptcha_response_field': $('#recaptcha_response_field').val(),
                    'user': {
                        'email': uemail.val(),
                        'first_name': ufname.val(),
                        'last_name': ulname.val(),
                        'sms_number': standardizePhoneNumber(uPhone.val()),
                        'street_id': uStreet.val(),
                        'password': upwd.val(),
                        'password_confirmation': upwdc.val(),
                    },
                    'locale': locale
                },
                beforeSend: function () {
                },
                error: function (jqXHR) {
                    data = $.parseJSON(jqXHR.responseText);
                    hideSpinner();
                    showInfoWindow();
                    submitButton.removeAttr('disabled');
                    if (data) {
                        createPopup(data.html, map.getCenter());
                        popup.setContent($('#IWCONTENT')[0]);
                        ajaxJS(data.html);
                    }

                },
                success: function (data) {
                    $('.sign_links').remove();
                    updateSidebar();
                    fetchDrainInfo();
                    window.location.href = window.location.hostname;
                    console.log(window.location.href);
                    window.location.reload();

                }
            });

        }

        return false;
    });


  /* updates an existing user */
    $('body').on('submit', '#edit_profile_form', function () {
        var submitButton = $("input[type='submit']", this);
        var uemail = $('#user_email');
        var ufname = $('#user_first_name');
        var ulname = $('#user_organization');
        var uPhone = $('#user_sms_number');
        var uStreet = $('#user_street_id');
        var upwd = $('#user_password');
        var uid = $('#user_id');
        var upwdc = $('#user_current_password');

        var locale = urlParam('locale');

        $.ajax({
            type: 'POST',
            url: '/users.json',
            data: {
                'commit': submitButton.val(),
                'utf8': '✓',
                'authenticity_token': $('input[name="authenticity_token"]', this).val(),
                'user': {
                    'email': uemail.val(),
                    'first_name': ufname.val(),
                    'last_name': ulname.val(),
                    'sms_number': uPhone.val(),
                    'street_id': uStreet.val(),
                    'password': upwd.val(),
                    'password_confirmation': upwdc.val(),
                },
                'locale': locale
            },
            beforeSend: function () {
            },
            error: function (jqXHR) {

             console.log('an error occured');


            },
            success: function (data) {
                updateSidebar();
                fetchDrainInfo();
            }
        });

        return false;
    });


    /*Getting all users */
    function getUsers() {
        var locale = urlParam('locale');

        $.ajax({
            type: 'GET',
            url: 'users',
            data: {
                'locale': locale
            },
            success: function (msg) {
                users = msg;
            }
        });
    }

  /* signs up new users for assigning drains */
    $('body').on('submit', '#new_user', function (e) {
        e.preventDefault();
        var locale = urlParam('locale');
        var gen_password = Math.random() // Generate random number, eg: 0.123456
                           .toString(36) // Convert  to base-36 : "0.4fzyo82mvyr"
                           .slice(-8);// Cut off last 8 characters : "yo82mvyr"

        var submitButton = $("input[type='submit']", this);
        var uemail = $('#user_email');
        var ufname = $('#user_first_name');
        var ulname = $('#user_last_name');
        var uPhone = $('#user_sms_number');
        var uStreet = $(this).attr('data-moid')
        var upwd = gen_password;
        var upwdc = gen_password;
        var errors = [];


        submitButton.attr('disabled', 'disabled');
        if (ufname.val() === '') {
            markError(ufname, errors);
        } else {
            unmarkError(ufname);
        }
        if (ulname.val() === '') {
            markError(ulname, errors);
        } else {
            unmarkError(ulname);
        }
        if (!/[\w\.%\+\]+@[\w\]+\.+[\w]{2,}/.test(uemail.val())) {
            markError(uemail, errors);
        } else {
            unmarkError(uemail);
        }
        if (!/^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/im.test(uPhone.val())) {
            markError(uPhone, errors);
        } else {
            unmarkError(uPhone);
        }
        if (errors.length > 0) {
            submitButton.removeAttr('disabled');
            errors[0].focus();
        }
        else {
            $.ajax({
                type: 'POST',
                url: '/createuser.json',
                data: {
                    'commit': submitButton.val(),
                    'utf8': '✓',
                    'authenticity_token': $('input[name="authenticity_token"]', this).val(),
                    'recaptcha_challenge_field': $('#recaptcha_challenge_field').val(),
                    'recaptcha_response_field': $('#recaptcha_response_field').val(),
                    'user': {
                        'email': uemail.val(),
                        'first_name': ufname.val(),
                        'last_name': ulname.val(),
                        'password': upwd,
                        'sms_number': standardizePhoneNumber(uPhone.val()),
                        'street_id': uStreet,
                        'password_confirmation': upwdc,
                    },
                    'locale': locale
                },
                beforeSend: function () {


                },
                error: function (jqXHR) {
                    data = $.parseJSON(jqXHR.responseText);
                    hideSpinner();
                    showInfoWindow();
                    submitButton.removeAttr('disabled');
                    if (data) {
                        createPopup(data.html, map.getCenter());
                        popup.setContent($('#IWCONTENT')[0]);
                        ajaxJS(data.html);
                    }

                },
                success: function (data) {
                    user_id = data.user.id;
                    if (user_id) {
                        assignDrain(pos)
                    }
                    fetchDrainInfo();
                }
            });

        }

    });


    function updateSidebar() {
        var locale = urlParam('locale');

        $.ajax({
            type: 'GET',
            url: '/sidebar',
            dataType: 'json',
            data: {
                'locale': locale
            },
            error: function (jqXHR) {
                //if (bDebug) console.error(jqXHR);
            },
            success: function (data) {
                //if (bDebug) console.info(data);
                $('#username').replaceWith(data['user_badge']);
                $('#drain_list').replaceWith(data['drain_list']);
                $('#address_box').replaceWith(data['address_box']);
            }
        });
    }


    function assignDrain(pos) {
        var locale = urlParam('locale');

        $.ajax({
            type: 'POST',
            url: '/drain_claims',
            data: {
                'gid': activeObjectId,
                'user_id': user_id,
                'authenticity_token': AUTH_TOKEN,
                'locale': locale
            },
            error: function (jqXHR) {
                data = $.parseJSON(jqXHR.responseText);
                alert(data.errors);
            },
            success: function (data) {
                map.closePopup();
                //add a new style 'foo'
                $.notify.addStyle('foo', {
                    html: "<div>" +
                    "<div class='clearfix'>" +
                    "<div class='title' data-notify-html='title'>" +
                    "You have successfully assigned this drain" +
                    "</div>" +
                    "<button class='buttons no'>&#10006;</button>" +
                    "</div>" +
                    "</div>"
                });

                //listen for click events from this style
                $(document).on('click', '.notifyjs-foo-base .no', function () {
                    //programmatically trigger propogating hide event
                    $(this).trigger('notify-hide');
                    refreshKML("all");
                    updateSidebar();
                    createPopup(data, pos);

                });
                $(document).on('click', '.notifyjs-foo-base .yes', function () {
                    //show button text
                    alert($(this).text() + " clicked!");
                    //hide notification
                    $(this).trigger('notify-hide');
                });

                var h5 = $("<h5/>").append("You have successfully assigned a dran !")

                $.notify({}, {
                    style: 'foo',
                    autoHide: false,
                    clickToHide: false,
                    position: 'top center'
                });

            }
        });
    }

    // Shows social media links, for sharing drain info

    $('body').on('click','.share_link', function(e){
       drain_gid = $(this).attr('data_gid');

       if($(".drain_social_media").css("display") == 'none'){
        $(".drain_social_media").css( {position:"relative", display: "block"
        , left: '10%' });
       }
       else{
            $(".drain_social_media").css( {display: "none"});
       }

    });

    // Refreshs drain details on a popup

    $('body').on('click','#refresh_link', function(e){

        drain_gid = $(this).attr('data_gid');

        if(drain_pos == null){
            drain_pos = map.getCenter();
        }
        showSpinner();
        fetchDrainInfo(drain_gid, drain_pos);

    });


    function bind(pos) {

        $('#abandon_link').on('click','.abdn_link', function () {
            var locale = urlParam('locale');
            if (window.confirm('Are you sure that you want to abandon this drain?')) {

                $.ajax({
                    type: 'POST',
                    url: '/drain_claims/' + $(this).attr('data-moid'),
                    data: {
                        'gid': activeObjectId,
                        'authenticity_token': AUTH_TOKEN,
                        '_method': 'delete',
                        'locale': locale
                    },
                    error: function (jqXHR) {
                        data = $.parseJSON(jqXHR.responseText);
                        if (bDebug) console.error(data);
                    },
                    success: function (data) {
                        refreshKML("all");
                        updateSidebar();
                        createPopup(data,pos);
                    }
                });
            }
            return false;
        });


        $('#abandon_link').on('click','.chng_link', function () {
            var locale = urlParam('locale');
            if (window.confirm('Are you sure that you want to change status?')) {
                var shoveled;
                if($(this).attr('data-moid') == "Yes" || $(this).attr('data-moid') == "Ndio"){
                    shoveled = false;
                }
                else {
                    shoveled = true;
                }

                $.ajax({
                    type: 'POST',
                    url: '/drains/' + activeObjectId,
                    data: {
                        'gid': activeObjectId,
                        'shoveled': shoveled,
                        'authenticity_token': AUTH_TOKEN,
                        '_method': 'put',
                        'locale': locale

                    },
                    error: function (jqXHR) {
                        data = $.parseJSON(jqXHR.responseText);
                        if (bDebug) console.error(data);
                    },
                    success: function (data) {
                        refreshKML("all");
                        updateSidebar();
                        createPopup(data,pos);
                    }
                });
            }
            return false;
        });


      /*Function for adoping a drain */
        $('#location').on('click', '.btnassing', function () {
            // get the current row
            var currentRow = $(this).closest("tr");

            var col1 = currentRow.find("td:eq(0)").text(); // get current row 1st TD value
            var data = col1;
            user_id = col1;
            assignDrain(pos);
            return false;
        });



        /* adding more claims */
        $('#add_claim').on('click', function () {
            var locale = urlParam('locale');
            getUsers();

            $.ajax({
                type: 'GET',
                url: 'drain_claims/adopt',
                data: {
                    'locale': locale
                },
                success: function (msg) {
                    getUsers();


                    if (users) {


                        createPopup(msg, drainLocation);
                        var trHTML = '';

                        $.each(users, function (i, item) {

                            trHTML += '<tr><td class="id_user"> ' + item.id + ' </td><td>' + item.first_name + '</td><td>' + item.last_name + '</td><td>' + '<button class="btnassing">' + 'assign' + '</button>' + '</tr>';
                        });

                        $('#location').append(trHTML);

                    }



                }
            });
            return false;
        });


      /* displays a form for assigning drains to users */
        $('#assign').on('click', function () {
            var locale = urlParam('locale');
            getUsers();

            $.ajax({
                type: 'GET',
                url: 'drain_claims/adopt',
                data: {
                    'locale': locale
                },
                success: function (msg) {
                    getUsers();


                    if (users) {


                        createPopup(msg, drainLocation);
                        var trHTML = '';

                        $.each(users, function (i, item) {

                            trHTML += '<tr><td class="id_user"> ' + item.id + ' </td><td>' + item.first_name + '</td><td>' + item.last_name + '</td><td>' + '<button class="btnassing">' + 'assign' + '</button>' + '</tr>';
                        });

                        $('#location').append(trHTML);

                    }



                }
            });
            return false;
        });


        $('#clean').on('click', function () {
            var id = $(this).attr('data-moid');
            var locale = urlParam('locale');
            showSpinner();

            $.ajax({
                type: 'POST',
                url: '/drains/' + id,
                data: {
                    'moid': $(this).attr('data-moid'),
                    'authenticity_token': AUTH_TOKEN,
                    '_method': 'put',
                    'shoveled': true,
                    'locale': locale
                },
                error: function (jqXHR) {
                    data = $.parseJSON(jqXHR.responseText);
                    if (bDebug) console.error(data);
                    hideSpinner();
                },
                success: function (data) {
                    refreshKML("all");
                    createPopup(data, pos);
                }
            });
            return false;
        });

        $('#unclean').on('click', function () {
            var id = $(this).attr('data-moid');
            var locale = urlParam('locale');
            showSpinner();

            $.ajax({
                type: 'POST',
                url: '/drains/' + id,
                data: {
                    'moid': $(this).attr('data-moid'),
                    'authenticity_token': AUTH_TOKEN,
                    '_method': 'put',
                    'shoveled': false,
                    'locale': locale
                },
                error: function (jqXHR) {
                    data = $.parseJSON(jqXHR.responseText);
                    if (bDebug) console.error(data);
                },
                success: function (data) {
                    refreshKML("all");
                    createPopup(data, pos);
                    hideSpinner();
                }
            });
            return false;
        });
    }

    function get_categories() {

        $('#cleaned').on('click', function () {
            showSpinner();
            refreshKML("cleaned");
        });
        $('#uncleaned').on('click', function () {
            showSpinner();
            refreshKML("uncleaned");
        });
        $('#need_help').on('click', function () {
            showSpinner();
            refreshKML("need_help");
        });
        $('#unknown').on('click', function () {
            showSpinner();
            refreshKML("unknown");
        });
        $('#all').on('click', function () {
            showSpinner();
            refreshKML("all");
        });
        $('#adopted').on('click', function () {
            showSpinner();
            refreshKML("adopted");
        });
        $('#not_adopted').on('click', function () {
            showSpinner();
            refreshKML("not_adopted");
        });
        
        $('#address_button').on('click', function () {
            showSpinner();
            var address = $('#address').val();
            refreshKML("address=" + address);

        });
    }

  /* searching table of users */

    $('body').on('keyup', '#myInput', function () {

        var input, filter, table, tr, td, i;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("location");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1];
            if (td) {
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }

        return false;
    });

    // function update_drain_view(activeObjectId){

    //     console.info(kmlLayer);
    //     console.info(kmlLayer.setStyle({weight: 6}));

    //     kmlLayer.eachLayer(function(e){
    //         console.log('inside');
    //         console.log(e);
    //     });
    //     kmlLayer.eachLayer(function(e){
    //         console.log('in each')
    //         feature_layer = e.layer;
    //         var mtaro = e.layer.feature.properties;

    //         console.log(mtaro.description);

    //         if(mtaro.description == activeObjectId){
    //             console.log('match');

    //             selected = e.layer
    //             selected.bringToFront()
    //             // check for past selected drain and 
    //             // return its style as always
    //             if (selected_drain){
    //                 selected_drain.setStyle({weight: 2.5});
    //             }
    //             // Style selected
    //             selected.setStyle({weight: 6});
    //             selected_drain = selected;

    //         }
    //         // increase size of the clicked drain
           
    //     });
    // }

    $('body').on('click', '.view_drain',
     function (e) {
        activeObjectId = $(this).attr('data-gid');
        $('#address').val($(this).text());

        $('#address_button')[0].click();

         var lat = $(this).attr('data-lat');
         var lng = $(this).attr('data-lng');
         var latlng = L.latLng(lat, lng);
         map.setView(latlng, 19);

         // update_drain_view(activeObjectId);

        return false;
    });

    $('body').on('click', '#view_street', 
        function (e) {
        var lat = $(this).attr('data-lat');
        var lng = $(this).attr('data-lng');
        var latlng = L.latLng(lat, lng);

        map.setView(latlng, 17);
    });


    function updateNotification(){
        var notification_msg = $('.notice').text();
        $('.notice').hide();
        console.log(notification_msg);
        if(notification_msg){

            //add a new style 'foo'
            $.notify.addStyle('foo', {
                html: "<div>" +
                "<div class='clearfix'>" +
                "<div class='title' data-notify-html='title'>" +
                notification_msg +
                "</div>" +
                "<button class='buttons no'>&#10006;</button>" +
                "</div>" +
                "</div>"
            });

            //listen for click events from this style
            $(document).on('click', '.notifyjs-foo-base .no', function () {
                //programmatically trigger propogating hide event
                $(this).trigger('notify-hide');

            });
            $(document).on('click', '.notifyjs-foo-base .yes', function () {
                //show button text
                alert($(this).text() + " clicked!");
                //hide notification
                $(this).trigger('notify-hide');
            });

            var h5 = $("<h5/>").append(notification_msg);

            $.notify({}, {
                style: 'foo',
                autoHide: false,
                clickToHide: false,
                position: 'top center'
            });

        }
    }

    /* Updates claims status */


    get_categories();
    updateNotification();

    




});  /* end of function */

$(document).ready(function(){
    $("#page").click(function () {
        $("#myDiv").fadeToggle("slow");
    });
});
$(window).resize(function() {
if( $(window).width() > 768 ) {
    $('#myDiv').show();
    $('#page').hide();
} else {

}

if( $(window).width() <767 ) {
    $('#myDiv').hide();
    $('#page').show();
} else {

}
});